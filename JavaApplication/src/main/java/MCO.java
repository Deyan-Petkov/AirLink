
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author deyan
 */
public class MCO extends javax.swing.JFrame {

    /**
     * Creates new form Flights
     */
    private DefaultTableModel itinerearyDftTblMdl;
    private String message;
    private long blankNumber;

    public MCO() {
        initComponents();
        //populate the table
        initMCOsTable();
    }
    /**
     * 
     * @param message this message is displayed in the text area 
     * its purpose is to guide what should be written
     */
    public void setMCO(String message) {
        this.message = message; 
        //shows which blankNumber is used fro this session
        blankTypejLabel.setText(String.valueOf(blankNumber));
        mcoServiceTextArea.setText(message);
    }
    /**
     * Populates the itinerary table
     */
    private void initMCOsTable() {
        try (Connection con = DbCon.getConnection()) {
            PreparedStatement pst = con.prepareStatement("select * from Itinerary");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();

            int columnCount = rsmd.getColumnCount();
            //create a model to of the flights table to be populated later
            itinerearyDftTblMdl = (DefaultTableModel) itineraryTable.getModel();
            itinerearyDftTblMdl.setRowCount(0);

            while (rs.next()) {
                //holds all valauese from table Itinerary
                Object[] a = new Object[8];
                //populating itinerary table according to the
                //data in the database
                for (int i = 0; i < columnCount; i++) {
                    a[0] = rs.getInt("ID");
                    a[1] = rs.getString("flightDeparture");
                    a[2] = rs.getString("flightDestination");
                    a[3] = rs.getString("flightDepartureTime");
                    a[4] = rs.getString("flightArrivalTime");
                    a[5] = rs.getInt("flightNum");
                    a[6] = rs.getLong("BlankblankNumber");
                    a[7] = rs.getInt("customerID");
                }// add new row to the model
                itinerearyDftTblMdl.addRow(a);
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createCustomerBackground = new javax.swing.JPanel();
        exchangeRateBackground = new javax.swing.JPanel();
        exchangeRateTitle = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mcoServiceTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        itineraryTable = new javax.swing.JTable();
        blankTypejLabel = new javax.swing.JLabel();
        detailsjLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        createCustomerBackground.setBackground(new java.awt.Color(255, 255, 255));
        createCustomerBackground.setPreferredSize(new java.awt.Dimension(1200, 1539));

        exchangeRateBackground.setBackground(new java.awt.Color(102, 255, 255));

        exchangeRateTitle.setFont(new java.awt.Font("Tahoma", 0, 72)); // NOI18N
        exchangeRateTitle.setText("MISCELLANEOUS");

        backButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        backButton.setText("BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout exchangeRateBackgroundLayout = new javax.swing.GroupLayout(exchangeRateBackground);
        exchangeRateBackground.setLayout(exchangeRateBackgroundLayout);
        exchangeRateBackgroundLayout.setHorizontalGroup(
            exchangeRateBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exchangeRateBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exchangeRateTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        exchangeRateBackgroundLayout.setVerticalGroup(
            exchangeRateBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exchangeRateBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(exchangeRateBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exchangeRateTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        addButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        mcoServiceTextArea.setColumns(20);
        mcoServiceTextArea.setRows(5);
        mcoServiceTextArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mcoServiceTextAreaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(mcoServiceTextArea);

        itineraryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Flight Departure", "Flight Destination", "Departure Time", "Arrival Time", "Flight Number", "Blank Number", "Customer ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        itineraryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itineraryTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(itineraryTable);
        if (itineraryTable.getColumnModel().getColumnCount() > 0) {
            itineraryTable.getColumnModel().getColumn(0).setPreferredWidth(5);
            itineraryTable.getColumnModel().getColumn(7).setPreferredWidth(5);
        }

        blankTypejLabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        blankTypejLabel.setText("BlankType");

        detailsjLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        detailsjLabel.setText("DETAILS");

        javax.swing.GroupLayout createCustomerBackgroundLayout = new javax.swing.GroupLayout(createCustomerBackground);
        createCustomerBackground.setLayout(createCustomerBackgroundLayout);
        createCustomerBackgroundLayout.setHorizontalGroup(
            createCustomerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exchangeRateBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(createCustomerBackgroundLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(createCustomerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createCustomerBackgroundLayout.createSequentialGroup()
                        .addComponent(detailsjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(createCustomerBackgroundLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1039, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(createCustomerBackgroundLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createCustomerBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(blankTypejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(366, 366, 366))
        );
        createCustomerBackgroundLayout.setVerticalGroup(
            createCustomerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createCustomerBackgroundLayout.createSequentialGroup()
                .addComponent(exchangeRateBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(blankTypejLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(detailsjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(createCustomerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createCustomerBackground, javax.swing.GroupLayout.DEFAULT_SIZE, 1109, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(createCustomerBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed
    /**
     * Inserts into the database the details written by advisor
     * and updates isSold column from Blank table accordingly 
     * @param evt 
     */
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        int selectedRow = itineraryTable.getSelectedRow();
        if (selectedRow >= 0) {//if advisor updated the textfield we can send its content to the database
            if (mcoServiceTextArea.getText().length() > 0 & !mcoServiceTextArea.getText().equals(message)) {
                try (Connection con = DbCon.getConnection()) {
                    Statement statement = con.createStatement();
                    statement.addBatch("INSERT INTO MCO (\n"
                            + "    itineraryID,\n"
                            + "    details\n"
                            + ")\n"
                            + "VALUES (\n"
                            + "    '" + itinerearyDftTblMdl.getValueAt(selectedRow, 0) + "',\n"
                            + "    '" + mcoServiceTextArea.getText() + "'\n"
                            + ");");

                    statement.addBatch("update blank set issold = 1 where  blankNumber = " + blankNumber + "");
                    
                    statement.executeBatch();
                    
                    JOptionPane.showMessageDialog(null, "Details for customer with ID: "
                            + itinerearyDftTblMdl.getValueAt(selectedRow, 7) + " and flight number: "
                            + itinerearyDftTblMdl.getValueAt(selectedRow, 5) + " are successfully added");
                    dispose();

                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(MCO.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "The operation was not successful");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please fill in details first");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select flight first");
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void mcoServiceTextAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mcoServiceTextAreaMouseClicked


    }//GEN-LAST:event_mcoServiceTextAreaMouseClicked

    private void itineraryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itineraryTableMouseClicked

    }//GEN-LAST:event_itineraryTableMouseClicked

    public void setBlankNumber(long blankNumber) {
        this.blankNumber = blankNumber;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Flights.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Flights.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Flights.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Flights.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MCO().setVisible(true);
            }
        });
    }
    /**
     *
     * @param message guides the user what should be written in the
     * mcoServiceTextArea
     * @param blankType could be 451 or 452. Determines what blank to be used
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel blankTypejLabel;
    private javax.swing.JPanel createCustomerBackground;
    private javax.swing.JLabel detailsjLabel;
    private javax.swing.JPanel exchangeRateBackground;
    private javax.swing.JLabel exchangeRateTitle;
    private javax.swing.JTable itineraryTable;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea mcoServiceTextArea;
    // End of variables declaration//GEN-END:variables

}
