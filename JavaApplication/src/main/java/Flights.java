
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author deyan
 */
public class Flights extends javax.swing.JFrame {

    /**
     * Creates new form Flights
     */
    private DefaultTableModel flightsDftTblMdl;
    private int selectedRow;

    public Flights() {
        initComponents();
        initFlightsTable();
    }

    private void initFlightsTable() {
        try ( Connection con = DbCon.getConnection()) {
            PreparedStatement pst = con.prepareStatement("select * from Flights");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();

            int columnCount = rsmd.getColumnCount();
            //create a model to of the flights table to be populated later
            flightsDftTblMdl = (DefaultTableModel) flightsTable.getModel();
            flightsDftTblMdl.setRowCount(0);

            while (rs.next()) {
                //holds all valauese from table Flight
                Object[] a = new Object[6];
                //assigning of the values from Flight
                for (int i = 0; i < columnCount; i++) {
                    a[0] = rs.getString("departure");
                    a[1] = rs.getString("destination");
                    a[2] = rs.getString("depTime");
                    a[3] = rs.getString("arrTime");
                    a[4] = rs.getInt("number");
                    a[5] = rs.getDouble("price");
                }// add new row to the model
                flightsDftTblMdl.addRow(a);
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createCustomerBackground = new javax.swing.JPanel();
        exchangeRateBackground = new javax.swing.JPanel();
        exchangeRateTitle = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        flightsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        createCustomerBackground.setBackground(new java.awt.Color(255, 255, 255));
        createCustomerBackground.setPreferredSize(new java.awt.Dimension(1200, 1539));

        exchangeRateBackground.setBackground(new java.awt.Color(102, 255, 255));

        exchangeRateTitle.setFont(new java.awt.Font("Tahoma", 0, 72)); // NOI18N
        exchangeRateTitle.setText("FLIGHTS");

        backButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        backButton.setText("BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout exchangeRateBackgroundLayout = new javax.swing.GroupLayout(exchangeRateBackground);
        exchangeRateBackground.setLayout(exchangeRateBackgroundLayout);
        exchangeRateBackgroundLayout.setHorizontalGroup(
            exchangeRateBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exchangeRateBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exchangeRateTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(196, 196, 196)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        exchangeRateBackgroundLayout.setVerticalGroup(
            exchangeRateBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exchangeRateBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(exchangeRateBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exchangeRateTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        deleteButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        editButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        editButton.setText("EDIT");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        flightsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight Departure", "Flight Destination", "Departure Time", "Arrival Time", "Flight Number", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        flightsTable.setPreferredSize(new java.awt.Dimension(1200, 1539));
        flightsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flightsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(flightsTable);

        javax.swing.GroupLayout createCustomerBackgroundLayout = new javax.swing.GroupLayout(createCustomerBackground);
        createCustomerBackground.setLayout(createCustomerBackgroundLayout);
        createCustomerBackgroundLayout.setHorizontalGroup(
            createCustomerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exchangeRateBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(createCustomerBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createCustomerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(createCustomerBackgroundLayout.createSequentialGroup()
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        createCustomerBackgroundLayout.setVerticalGroup(
            createCustomerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createCustomerBackgroundLayout.createSequentialGroup()
                .addComponent(exchangeRateBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addGroup(createCustomerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(createCustomerBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editButton)
                        .addComponent(addButton)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createCustomerBackground, javax.swing.GroupLayout.DEFAULT_SIZE, 1111, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(createCustomerBackground, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try ( Connection con = DbCon.getConnection()) {
            selectedRow = flightsTable.getSelectedRow();
            if (selectedRow >= 0) {
                PreparedStatement pst = con.prepareStatement("delete from flights where number = '" + flightsDftTblMdl.getValueAt(selectedRow, 4) + "'");
                pst.execute();
                initFlightsTable();
            } else {
                JOptionPane.showMessageDialog(null, "Please select row first");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(CustomerRecords.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        try ( Connection con = DbCon.getConnection()) {
            int rowCount = flightsTable.getRowCount();
            selectedRow = flightsTable.getSelectedRow();
           // String fTableKey = flightsDftTblMdl.getValueAt(selectedRow, 4).toString();
            //if row is chosen
            if (selectedRow >= 0) {

                PreparedStatement pst = con.prepareStatement("update Flights set departure = '"
                        + flightsDftTblMdl.getValueAt(selectedRow, 0)
                        + "', destination = '"
                        + flightsDftTblMdl.getValueAt(selectedRow, 1)
                        + "', depTime = '"
                        + flightsDftTblMdl.getValueAt(selectedRow, 2)
                        + "', arrTime = '"
                        + flightsDftTblMdl.getValueAt(selectedRow, 3)
                        + "', number = '"
                        + flightsDftTblMdl.getValueAt(selectedRow, 4)
                        + "', price = '"
                        + flightsDftTblMdl.getValueAt(selectedRow, 5)
                        + "' where number = '" + flightsDftTblMdl.getValueAt(selectedRow, 4) + "'");

                pst.execute();
                initFlightsTable();
            } else {
                JOptionPane.showMessageDialog(null, "Please select row first");
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(CustomerRecords.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_editButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        try ( Connection con = DbCon.getConnection()) {
            PreparedStatement pst = con.prepareStatement("select count(number) from flights");
            ResultSet rs = pst.executeQuery();
            rs.next();//check how many rows we have in the db
            int result = rs.getInt("count(number)");
            int rowCnt = flightsTable.getRowCount();

            //if we already added row then insert it into the database
            if (rowCnt > result) {
                rowCnt--;
                pst = con.prepareStatement("INSERT INTO Flights (\n"
                        + "    departure,\n"
                        + "    destination,\n"
                        + "    depTime,\n"
                        + "    arrTime,\n"
                        + "    number,\n"
                        + "    price\n"
                        + ")\n"
                        + "VALUES (\n"
                        + "    '" + flightsDftTblMdl.getValueAt(rowCnt, 0) + "',\n"
                        + "    '" + flightsDftTblMdl.getValueAt(rowCnt, 1) + "',\n"
                        + "    '" + flightsDftTblMdl.getValueAt(rowCnt, 2) + "',\n"
                        + "    '" + flightsDftTblMdl.getValueAt(rowCnt, 3) + "',\n"
                        + "    '" + flightsDftTblMdl.getValueAt(rowCnt, 4) + "',\n"
                        + "    '" + flightsDftTblMdl.getValueAt(rowCnt, 5) + "'\n"
                        + ");");
                pst.execute();
                initFlightsTable();
            } else {//else add new row
                flightsDftTblMdl.addRow(new Object[5]);
                flightsDftTblMdl.setValueAt("Fill Up and Press \"ADD\" ...", rowCnt, 0);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Flights.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_addButtonActionPerformed

    private void flightsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flightsTableMouseClicked

    }//GEN-LAST:event_flightsTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Flights.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Flights.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Flights.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Flights.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Flights().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JPanel createCustomerBackground;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JPanel exchangeRateBackground;
    private javax.swing.JLabel exchangeRateTitle;
    private javax.swing.JTable flightsTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
