
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author xahna
 */
public class LoginForm extends javax.swing.JFrame {

    public static String role;
    /**
     * Creates new form loginForm
     */
    public LoginForm() {
        initComponents();
    }
    
   
        /**
         * The purpose of this method is to encrypt user input for password
         * using MD5 hash function.
         * 
         * @param md5 user input for password
         * @return 
         */
    public static final String encrypt(String md5) {

        try {//This class provides the encrypting algorithm (MD5) 
            java.security.MessageDigest md = java.security.MessageDigest.getInstance("MD5");
            //encrypt the input and return it as a array of bytes
            byte[] array = md.digest(md5.getBytes());
            StringBuffer sb = new StringBuffer();
            //convert the byte array to hex value
            for (int i = 0; i < array.length; i++) {
                sb.append(Integer.toHexString((array[i] & 0xFF) | 0x100).substring(1, 3));
            }//return encrypted password
            return sb.toString();
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginBackground = new javax.swing.JPanel();
        loginBlueBackground = new javax.swing.JPanel();
        loginTitle = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        usernameTextbox = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        passwordBox = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 900));

        loginBackground.setBackground(new java.awt.Color(255, 255, 255));

        loginBlueBackground.setBackground(new java.awt.Color(102, 255, 255));

        loginTitle.setFont(new java.awt.Font("Tahoma", 0, 110)); // NOI18N
        loginTitle.setText("AIRTICKETS SALES");

        javax.swing.GroupLayout loginBlueBackgroundLayout = new javax.swing.GroupLayout(loginBlueBackground);
        loginBlueBackground.setLayout(loginBlueBackgroundLayout);
        loginBlueBackgroundLayout.setHorizontalGroup(
            loginBlueBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginBlueBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loginTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 958, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );
        loginBlueBackgroundLayout.setVerticalGroup(
            loginBlueBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginBlueBackgroundLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(loginTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        passwordLabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        passwordLabel.setText("PASSWORD:");

        usernameLabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        usernameLabel.setText("USERNAME:");

        usernameTextbox.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        usernameTextbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextboxActionPerformed(evt);
            }
        });

        loginButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        loginButton.setText("LOGIN");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        passwordBox.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        passwordBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginBackgroundLayout = new javax.swing.GroupLayout(loginBackground);
        loginBackground.setLayout(loginBackgroundLayout);
        loginBackgroundLayout.setHorizontalGroup(
            loginBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginBlueBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginBackgroundLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(loginBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(102, 102, 102)
                .addGroup(loginBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameTextbox)
                    .addComponent(passwordBox, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE))
                .addGap(181, 181, 181))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loginButton)
                .addGap(359, 359, 359))
        );
        loginBackgroundLayout.setVerticalGroup(
            loginBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginBackgroundLayout.createSequentialGroup()
                .addComponent(loginBlueBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113)
                .addGroup(loginBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(usernameTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78)
                .addGroup(loginBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordBox, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(loginButton)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(loginBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usernameTextboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextboxActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
         //get the user input from name field
        String name = usernameTextbox.getText();
        //get the user input for password field (need to be stored in char aray for security(memory access) reasons)
        char[] password = passwordBox.getPassword();
        //To encrypt the password we need to convert it to String
        String finalState = "";
        for (char c : password) {
            finalState += c;
        }
        
        String md5EncUserInput = encrypt(finalState);//Encrypts the password 
      
        try (//Get connection to the database
            Connection con = DbCon.getConnection();
            ){
             //find if we have this username and password in the database
            PreparedStatement ps = con.prepareStatement("select role, ID from Staff where password = ? and name = ?");
            //replace the wildcard characters 
            ps.setString(1, md5EncUserInput);
            ps.setString(2, name);
            //returns a table with the results from from the ps
            ResultSet rs = ps.executeQuery();
            //Resolves which user logged in and what credentials to be given
            if (rs.next()) {
                role = rs.getString("role");
                switch (rs.getString("role")) {
                    case "admin":
                        AdminHub admHub = new AdminHub();
                        admHub.setVisible(true);
                        this.dispose();
                        admHub.setDefaultCloseOperation(AdminHub.DISPOSE_ON_CLOSE);
                        break;
                    case "advisor":
                        AdvisorHub advisorHub = new AdvisorHub(rs.getInt("ID"));
                        advisorHub.setVisible(true);
                        this.dispose();
                        advisorHub.setDefaultCloseOperation(AdvisorHub.DISPOSE_ON_CLOSE);
                        break;
                    case "manager":
                        ManagerHub managerHub = new ManagerHub();
                        managerHub.setVisible(true);
                        this.dispose();
                        managerHub.setDefaultCloseOperation(ManagerHub.DISPOSE_ON_CLOSE);
                        break;
                    case "Manager":
                        ManagerHub mh = new ManagerHub();
                        mh.setVisible(true);
                        this.dispose();
                        mh.setDefaultCloseOperation(mh.DISPOSE_ON_CLOSE);
                        break;
                        
                    default:
                        break;
                }
                
            }
        }
        catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
        }

      

    }//GEN-LAST:event_loginButtonActionPerformed

    private void passwordBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel loginBackground;
    private javax.swing.JPanel loginBlueBackground;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginTitle;
    private javax.swing.JPasswordField passwordBox;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextbox;
    // End of variables declaration//GEN-END:variables
}
